import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id "org.mozilla.rust-android-gradle.rust-android"
}

def buildType = gradle.startParameter.taskRequests.any {it.args[0].contains("Release")}  ? 'release' : 'debug'


android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    ndkVersion "21.3.6528147"

    sourceSets {
        main {
            // also possible https://stackoverflow.com/a/28849191/495800
            jniLibs.srcDirs = ['../build/rustJniLibs/android']
        }
    }
}



cargo {
    OperatingSystem os = DefaultNativePlatform.currentOperatingSystem;
    def testTarget
    if (os.isMacOsX()) {
        testTarget = "darwin"
    } else if (os.isWindows()) {
        testTarget = "win32-x86-64-gnu"
    } else {
        testTarget = "linux-x86-64"
    }
    module  = "../../rust"
    libname = "adblockerjni"

    targets = ['arm64', 'arm', 'x86_64', testTarget]
    verbose = false
    prebuiltToolchains = true
    apiLevel = 21
    targetIncludes = ['libadblockerjni.so']
    println('buildType ' + buildType)
    profile = buildType
}

tasks.whenTaskAdded { task ->
    if ((task.name == 'javaPreCompileDebug' || task.name == 'javaPreCompileRelease')) {
        task.dependsOn 'cargoBuild'
    }
}

tasks.withType(Test) {
    systemProperty "java.library.path", "../../rust/target/debug/"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}